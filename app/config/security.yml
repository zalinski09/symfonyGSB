# To get started with security, check out the documentation:
# http://symfony.com/doc/current/book/security.html
security:
    encoders:
        Symfony\Component\Security\Core\User\UserInterface: plaintext
        Symfony\Component\Security\Core\SecurityContext: plaintext
        GSB\AccountBundle\Entity\Visiteur: sha512

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]
        
    # http://symfony.com/doc/current/book/security.html#where-do-users-come-from-user-providers
    providers:
        main:
            chain:
                providers: [provider_visiteur, provider_comptable]
        provider_visiteur:
            entity: { class: GSB\AccountBundle\Entity\Visiteur, property: login }
        provider_comptable:
            entity: { class: GSB\AccountBundle\Entity\Comptable, property: login }
            
    firewalls:
        # disables authentication for assets and the profiler, adapt it according to your needs
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main_login:
        # Cette expression régulière permet de prendre /login (mais pas /login_check !)
            pattern:   ^/login$
            anonymous: true 
        
        main:
            pattern:   ^/
            anonymous: true
            provider:  main
            form_login:
                login_path: login
                check_path: login_check
            logout:
                path:   logout
                target: /
                
            # activate different ways to authenticate

            # http_basic: ~
            # http://symfony.com/doc/current/book/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: ~
            # http://symfony.com/doc/current/cookbook/security/form_login_setup.html
            
    access_control:
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }

